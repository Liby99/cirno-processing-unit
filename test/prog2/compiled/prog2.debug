  0: 101000101 movi $0 94 <- setup
  1: 100001110  
  2: 101011111 movi $1 251 
  3: 100011011  
  4: 010010001 st $0 $1 
  5: 101000100 movi $0 64 
  6: 100000000  
  7: 010001000 ld $2 $0 <- loop_start
  8: 000001100 incr $0 
  9: 010001100 ld $3 $0 
 10: 000001100 incr $0 
 11: 101011111 movi $1 255 
 12: 100011111  
 13: 010010001 st $0 $1 
 14: 100011110 movil $1 14 
 15: 010011001 st $2 $1 
 16: 100011101 movil $1 13 
 17: 010011101 st $3 $1 
 18: 011110111 shri $2 7 
 19: 110010000 clr $1 
 20: 101000000 movi $0 7 
 21: 100000111  
 22: 000011011 xor $2 $3 <- p8_while_start
 23: 011111001 shri $3 1 
 24: 000001101 incr $1 
 25: 001100001 cmp $0 $1 
 26: 010110010 beqil p8_while_end 
 27: 111100101 jmpil p8_while_start 
 28: 110100001 andi $2 1 <- p8_while_end
 29: 011010001 shli $2 1 
 30: 101001111 movi $0 252 
 31: 100001100  
 32: 010011000 st $2 $0 
 33: 100001101 movil $0 13 
 34: 010001100 ld $3 $0 
 35: 100001000 movil $0 8 
 36: 000111100 and $3 $0 
 37: 100001110 movil $0 14 
 38: 010001000 ld $2 $0 
 39: 011110100 shri $2 4 
 40: 110100111 andi $2 7 
 41: 000101110 or $3 $2 
 42: 010001000 ld $2 $0 
 43: 011110011 shri $2 3 
 44: 110010000 clr $1 
 45: 101000000 movi $0 7 
 46: 100000111  
 47: 000011011 xor $2 $3 <- p4_while_start
 48: 011111001 shri $3 1 
 49: 000001101 incr $1 
 50: 001100001 cmp $0 $1 
 51: 010110010 beqil p4_while_end 
 52: 111100101 jmpil p4_while_start 
 53: 110100001 andi $2 1 <- p4_while_end
 54: 101001111 movi $0 252 
 55: 100001100  
 56: 010000100 ld $1 $0 
 57: 000100110 or $1 $2 
 58: 011001001 shli $1 1 
 59: 100001110 movil $0 14 
 60: 010001000 ld $2 $0 
 61: 011110001 shri $2 1 
 62: 001111110 mov $3 $2 
 63: 011111001 shri $3 1 
 64: 000011011 xor $2 $3 
 65: 011111011 shri $3 3 
 66: 000011011 xor $2 $3 
 67: 011111001 shri $3 1 
 68: 000011011 xor $2 $3 
 69: 100001101 movil $0 13 
 70: 010001100 ld $3 $0 
 71: 011111001 shri $3 1 
 72: 000011011 xor $2 $3 
 73: 011111001 shri $3 1 
 74: 000011011 xor $2 $3 
 75: 011111011 shri $3 3 
 76: 000011011 xor $2 $3 
 77: 011111001 shri $3 1 
 78: 000011011 xor $2 $3 
 79: 110100001 andi $2 1 
 80: 000100110 or $1 $2 
 81: 011001001 shli $1 1 
 82: 100001100 movil $0 12 
 83: 010010100 st $1 $0 
 84: 110010000 clr $1 
 85: 100001110 movil $0 14 
 86: 010001000 ld $2 $0 
 87: 001111110 mov $3 $2 
 88: 011111010 shri $3 2 
 89: 101000000 movi $0 3 
 90: 100000011  
 91: 000011011 xor $2 $3 <- p1_while1_start
 92: 011111010 shri $3 2 
 93: 000001101 incr $1 
 94: 001100001 cmp $0 $1 
 95: 010110010 beqil p1_while1_end 
 96: 111100101 jmpil p1_while1_start 
 97: 101001111 movi $0 253 <- p1_while1_end
 98: 100001101  
 99: 010001100 ld $3 $0 
100: 110010000 clr $1 
101: 101000000 movi $0 4 
102: 100000100  
103: 000011011 xor $2 $3 <- p1_while2_start
104: 011111010 shri $3 2 
105: 000001101 incr $1 
106: 001100001 cmp $0 $1 
107: 010110010 beqil p1_while2_end 
108: 111100101 jmpil p1_while2_start 
109: 110100001 andi $2 1 <- p1_while2_end
110: 101001111 movi $0 252 
111: 100001100  
112: 010000100 ld $1 $0 
113: 000100110 or $1 $2 
114: 110000000 clr $0 
115: 110110000 clr $3 
116: 001111001 mov $2 $1 
117: 001110001 mov $0 $1 
118: 011100001 shri $0 1 
119: 000101000 or $2 $0 
120: 011100001 shri $0 1 
121: 000101000 or $2 $0 
122: 011100001 shri $0 1 
123: 000111000 and $2 $0 
124: 110100001 andi $2 1 
125: 000001111 incr $3 
126: 001101011 cmp $2 $3 
127: 010110010 beqil correct_parity_upper 
128: 111001010 jmpil check_correct_parity_lower 
129: 100001001 movil $0 9 <- correct_parity_upper
130: 001000100 sub $1 $0 
131: 010101101 sh $3 $1 
132: 101001111 movi $0 253 
133: 100001101  
134: 010001000 ld $2 $0 
135: 000011011 xor $2 $3 
136: 010011000 st $2 $0 
137: 111001110 jmpil correct_parity_end 
138: 110000000 clr $0 <- check_correct_parity_lower
139: 001100100 cmp $1 $0 
140: 010110010 beqil correct_parity_directly_to_end 
141: 111000010 jmpil correct_parity_lower 
142: 111001001 jmpil correct_parity_end <- correct_parity_directly_to_end
143: 000001100 incr $0 <- correct_parity_lower
144: 001000100 sub $1 $0 
145: 010100001 sh $0 $1 
146: 101011111 movi $1 254 
147: 100011110  
148: 010001001 ld $2 $1 
149: 000011000 xor $2 $0 
150: 010011001 st $2 $1 
151: 101111111 movi $3 251 <- correct_parity_end
152: 100111011  
153: 010000011 ld $0 $3 
154: 100111101 movil $3 13 
155: 010000111 ld $1 $3 
156: 011001100 shli $1 4 
157: 100111110 movil $3 14 
158: 010001011 ld $2 $3 
159: 011110010 shri $2 2 
160: 110100001 andi $2 1 
161: 000100110 or $1 $2 
162: 010001011 ld $2 $3 
163: 011110011 shri $2 3 
164: 110101110 andi $2 14 
165: 000100110 or $1 $2 
166: 010010100 st $1 $0 
167: 000001100 incr $0 
168: 100111101 movil $3 13 
169: 010000111 ld $1 $3 
170: 011101100 shri $1 4 
171: 010010100 st $1 $0 
172: 000001100 incr $0 
173: 100111011 movil $3 11 
174: 010010011 st $0 $3 
175: 100111111 movil $3 15 
176: 010000011 ld $0 $3 
177: 101110101 movi $3 94 
178: 100111110  
179: 001100011 cmp $0 $3 
180: 010110100 beqil loop_end 
181: 101010000 jmpl $1 loop_start 
182: 100010111  
183: 000001001  
184: 000000001 halt <- loop_end
